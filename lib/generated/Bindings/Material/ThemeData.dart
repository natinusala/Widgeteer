// 🍞 bin/widgeteer/bindings_generator/bindings_generator.dart:77
// === GENERATED BY `widgeteer bindings generate` === DO NOT EDIT ===
// === Follow the breadcrumbs to find what code generated what you're reading ===
// 🍞 bin/widgeteer/bindings_generator/bindings_generator.dart:45
import 'package:widgeteer/generated/Bindings/Callback/VoidCallback.dart';
// 🍞 bin/widgeteer/bindings/persistent_object.dart:202
// 🍞 bin/widgeteer/bindings_generator/models/dart_function.dart:57
import 'package:flutter/material.dart';
import 'dart:ffi';
import 'package:ffi/ffi.dart';
import 'package:widgeteer/generated/lib_widgeteer.dart';
import 'package:widgeteer/swift.dart';
import 'package:flutter/foundation.dart';
// 🍞 bin/widgeteer/bindings_generator/models/dart_function.dart:89
Object newThemeDataImpl(int primarySwatch, Object textTheme, int scaffoldBackgroundColor, int hintColor, Object primaryTextTheme) {
    // 🍞 bin/widgeteer/bindings_generator/models/dart_function.dart:79
    // 🍞 bin/widgeteer/bindings_generator/models/parameter.dart:142
    // 🍞 bin/widgeteer/bindings/enum.dart:199
    late final MaterialColor? primarySwatchValue;
    switch (primarySwatch) {
        case -1: primarySwatchValue = null; break;
        case 0: primarySwatchValue = Colors.blue; break;
        case 1: primarySwatchValue = Colors.green; break;
        default: throw "Received invalid index '$primarySwatch' for value of enum 'MaterialColor?'";
    }
    // 🍞 bin/widgeteer/bindings/persistent_object.dart:251
    final textThemeValue = textTheme as TextTheme;
    // 🍞 bin/widgeteer/bindings/color.dart:118
    final scaffoldBackgroundColorValue = Color(scaffoldBackgroundColor);
    // 🍞 bin/widgeteer/bindings/color.dart:118
    final hintColorValue = Color(hintColor);
    // 🍞 bin/widgeteer/bindings/persistent_object.dart:251
    final primaryTextThemeValue = primaryTextTheme as TextTheme;
    
    return ThemeData(primarySwatch: primarySwatchValue, textTheme: textThemeValue, scaffoldBackgroundColor: scaffoldBackgroundColorValue, hintColor: hintColorValue, primaryTextTheme: primaryTextThemeValue);
}