// üçû bin/widgeteer/bindings_generator/bindings_generator.dart:91
// === GENERATED BY `widgeteer bindings generate` === DO NOT EDIT ===
// === Follow the breadcrumbs to find what code generated what you're reading ===
// üçû bin/widgeteer/bindings/persistent_object.dart:190
import DartApiDl

// üçû bin/widgeteer/bindings/persistent_object.dart:135
public class TextTheme {
    /// Persistent handle to the Dart object.
    let handle: Dart_PersistentHandle

    // üçû bin/widgeteer/bindings/persistent_object.dart:98
    public init(headlineLarge: TextStyle?, headlineMedium: TextStyle?, headlineSmall: TextStyle?, titleLarge: TextStyle?, titleMedium: TextStyle?, titleSmall: TextStyle?, labelLarge: TextStyle?, labelMedium: TextStyle?, labelSmall: TextStyle?, bodyLarge: TextStyle?, bodyMedium: TextStyle?, bodySmall: TextStyle?) {
        // üçû bin/widgeteer/bindings_generator/models/outlet.dart:118
        assertIsOnFlutterThread()
        
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let headlineLargeValue = headlineLarge?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let headlineMediumValue = headlineMedium?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let headlineSmallValue = headlineSmall?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let titleLargeValue = titleLarge?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let titleMediumValue = titleMedium?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let titleSmallValue = titleSmall?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let labelLargeValue = labelLarge?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let labelMediumValue = labelMedium?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let labelSmallValue = labelSmall?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let bodyLargeValue = bodyLarge?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let bodyMediumValue = bodyMedium?.handle ?? Dart_Null
        // üçû bin/widgeteer/bindings/persistent_object.dart:323
        let bodySmallValue = bodySmall?.handle ?? Dart_Null
        let localHandle = Flutter_NewTextTheme(
            headlineLargeValue,
            headlineMediumValue,
            headlineSmallValue,
            titleLargeValue,
            titleMediumValue,
            titleSmallValue,
            labelLargeValue,
            labelMediumValue,
            labelSmallValue,
            bodyLargeValue,
            bodyMediumValue,
            bodySmallValue
        )
        self.handle = Dart_NewPersistentHandle_DL(localHandle)!
    }
    
    public init(persisting localHandle: Dart_Handle) {
        self.handle = Dart_NewPersistentHandle_DL(localHandle)!
    }

    // üçû bin/widgeteer/bindings/persistent_object.dart:123
    deinit {
        Flutter_Schedule(scoped: false) { [handle] _ in
            Dart_DeletePersistentHandle_DL(handle)
        }
    }
    // üçû bin/widgeteer/bindings/persistent_object.dart:159
    public var headlineLarge: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetHeadlineLarge(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var headlineMedium: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetHeadlineMedium(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var headlineSmall: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetHeadlineSmall(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var titleLarge: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetTitleLarge(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var titleMedium: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetTitleMedium(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var titleSmall: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetTitleSmall(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var labelLarge: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetLabelLarge(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var labelMedium: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetLabelMedium(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var labelSmall: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetLabelSmall(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var bodyLarge: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetBodyLarge(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var bodyMedium: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetBodyMedium(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
    public var bodySmall: TextStyle? {
        return Flutter_BlockingSchedule(scoped: false) { _ in
            let localHandle = Flutter_TextThemeGetBodySmall(self.handle)
            // üçû bin/widgeteer/bindings/persistent_object.dart:307
            let TextThemeValue: TextStyle? = localHandle == Dart_Null ? nil : TextStyle(persisting: localHandle)
            return TextThemeValue
        }
    }
    
}